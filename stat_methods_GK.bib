@book{Gelman2006,
author = {Gelman, Andrew and Hill, Jennifer},
isbn = {https://doi.org/10.1017/CBO9780511790942},
mendeley-groups = {F32},
publisher = {Cambridge University Press},
title = {{Data Analysis Using Regression and Multilevel/Hierarchical Models}},
year = {2006}
}

@misc{RCoreTeam2019,
author = {{R Core Team}},
title = {{RSoftware2019}},
year = {2019}
}

@article{Burkner2018,
abstract = {The brms package implements Bayesian multilevel models in R using the probabilistic programming language Stan. A wide range of distributions and link functions are supported, allowing users to fit - among others - linear, robust linear, binomial, Poisson, survival, ordinal, zero-inflated, hurdle, and even non-linear models all in a multilevel context. Further modeling options include autocorrelation of the response variable, user defined covariance structures, censored data, as well as meta-analytic standard errors. Prior specifications are flexible and explicitly encourage users to apply prior distributions that actually reflect their beliefs. In addition, model fit can easily be assessed and compared with the Watanabe-Akaike information criterion and leave-one-out cross-validation.},
author = {B{\"{u}}rkner, Paul-Christian},
doi = {10.18637/jss.v080.i01},
file = {:Users/keeleg/Dropbox (ValdarLab)/papers/Burkner2017.pdf:pdf},
issn = {1548-7660},
journal = {Journal of Statistical Software},
keywords = {bayesian inference,mcmc,multilevel model,ordinal data,r,stan},
number = {1},
title = {{brms : An R Package for Bayesian Multilevel Models Using Stan}},
url = {http://www.jstatsoft.org/v80/i01/},
volume = {80},
year = {2017}
}

@article{Burkner2017,
abstract = {The brms package allows R users to easily specify a wide range of Bayesian single-level and multilevel models, which are fitted with the probabilistic programming language Stan behind the scenes. Several response distributions are supported, of which all parameters (e.g., location, scale, and shape) can be predicted at the same time thus allowing for distributional regression. Non-linear relationships may be specified using non-linear predictor terms or semi-parametric approaches such as splines or Gaussian processes. To make all of these modeling options possible in a multilevel framework, brms provides an intuitive and powerful formula syntax, which extends the well known formula syntax of lme4. The purpose of the present paper is to introduce this syntax in detail and to demonstrate its usefulness with four examples, each showing other relevant aspects of the syntax.},
archivePrefix = {arXiv},
arxivId = {1705.11123},
author = {B{\"{u}}rkner, Paul-Christian},
eprint = {1705.11123},
file = {:Users/keeleg/Dropbox (ValdarLab)/papers/Burkner2018.pdf:pdf},
number = {July},
pages = {395--411},
title = {{Advanced Bayesian Multilevel Modeling with the R Package brms}},
url = {http://arxiv.org/abs/1705.11123},
volume = {10},
year = {2017}
}

@article{Carpenter2017,
abstract = {Stan is a probabilistic programming language for specifying statistical models. A Stan program imperatively defines a log probability function over parameters conditioned on specified data and constants. As of version 2.2.0, Stan provides full Bayesian inference for continuous-variable models through Markov chain Monte Carlo methods such as the No-U-Turn sampler, an adaptive form of Hamiltonian Monte Carlo sampling. Penalized maximum likelihood estimates are calculated using optimization methods such as the Broyden-Fletcher-Goldfarb-Shanno algorithm. Stan is also a platform for computing log densities and their gradients and Hessians, which can be used in alternative algorithms such as variational Bayes, expectation propa- gation, and marginal inference using approximate integration. To this end, Stan is set up so that the densities, gradients, and Hessians, along with intermediate quantities of the algorithm such as acceptance probabilities, are easily accessible. Stan can be called from the command line, through R using the RStan package, or through Python using the PyStan package. All three interfaces support sampling or optimization-based inference and analysis, and RStan and PyStan also provide access to log probabilities, gradients, Hessians, and data I/O.},
archivePrefix = {arXiv},
arxivId = {1210.1088},
author = {Carpenter, Bob and Gelman, Andrew and Hoffman, Matthew D. and Lee, Daniel and Goodrich, Ben and Betancourt, Michael and Brubaker, Marcus and Guo, Jiqiang and Li, Peter and Riddell, Allen},
doi = {10.18637/jss.v076.i01},
eprint = {1210.1088},
file = {:Users/keeleg/Documents/papers/proteomics/Carpenter{\_}etal2017.pdf:pdf},
isbn = {1076998615},
issn = {1548-7660},
journal = {Journal of Statistical Software},
mendeley-groups = {F32},
number = {1},
title = {{Stan : A Probabilistic Programming Language}},
url = {http://www.jstatsoft.org/v76/i01/},
volume = {76},
year = {2017}
}


